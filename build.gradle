plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.bnp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springdoc = '1.6.13'
}

dependencies {

	// ********************** Web
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// ********************** Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.hibernate.validator:hibernate-validator'

	// ********************** Spingdoc & OpenApi
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${springdoc}"

	// ********************** Project Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ********************** Test
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	// Use JUnit 5
	useJUnitPlatform()

	// Allow reading system properties and env. variables passed along with Gradle commands.
	systemProperties System.getProperties()
}

/**
 * Enable running multiple test cases in parallel. (Gradle Optimization)
 */
tasks.withType(Test).configureEach {
	// Use some number less than or equal to the number of CPU cores
	maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}
